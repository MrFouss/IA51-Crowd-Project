/** 
 * MIT License
 * 
 * Copyright (c) 2017 Fouss
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fr.utbm.info.ia51.crowdproject.environment

import java.util.UUID
import org.dyn4j.geometry.Convex
import org.dyn4j.geometry.Vector2
import fr.utbm.info.ia51.crowdproject.motion.MotionBehavior

/** 
 * Class defining the body of a hamster
 */
class HamsterBody extends AgentBody {
	
	val MAX_LINEAR_VELOCITY = 100.0f
	val MAX_LINEAR_ACCELERATION = 100.0f
	val MAX_ANGULAR_VELOCITY = 30.0f
	val MAX_ANGULAR_ACCELERATION = 30.0f
	
	new (shape : Convex,
		frustrum : Convex,
		cryRange : Convex,
		agentId : UUID,
		motionBehavior : MotionBehavior
	) {
		super(shape, frustrum, cryRange, agentId, motionBehavior)
	}

	new (shape : Convex,
		frustrum : Convex,
		cryRange : Convex,
		position : Vector2,
		agentId : UUID,
		motionBehavior : MotionBehavior
	) {
		super(shape, frustrum, cryRange, position, agentId, motionBehavior)
	}
	
	override getMaxLinearVelocity : float { MAX_LINEAR_VELOCITY }
	
	override getMaxLinearAcceleration : float { MAX_LINEAR_ACCELERATION }
	
	override getMaxAngularVelocity : float { MAX_ANGULAR_VELOCITY }
	
	override getMaxAngularAcceleration : float { MAX_ANGULAR_ACCELERATION }
	
}
