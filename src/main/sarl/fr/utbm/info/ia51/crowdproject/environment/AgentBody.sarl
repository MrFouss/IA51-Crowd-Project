/** 
 * MIT License
 * 
 * Copyright (c) 2017 Fouss
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fr.utbm.info.ia51.crowdproject.environment

import java.util.UUID
import org.dyn4j.geometry.Convex
import org.dyn4j.geometry.MassType
import org.dyn4j.geometry.Vector2

abstract class AgentBody extends MobileBody implements Comparable<AgentBody> {

	val agentId : UUID

	new (shape : Convex, agentId : UUID) {
		super(shape, MassType.NORMAL)
		this.agentId = agentId
	}

	new (position : Vector2, shape : Convex, agentId : UUID) {
		super(shape, MassType.NORMAL)
		this.agentId = agentId
	}
	
	def getAgentId : UUID {
		return this.agentId
	}
	
	def compareTo(o : AgentBody) : int {
		if (o === this) {
			return 0
		} else if (o === null) {
			return Integer::MAX_VALUE
		}
		return this.agentId.compareTo(o.agentId)
	}
}
