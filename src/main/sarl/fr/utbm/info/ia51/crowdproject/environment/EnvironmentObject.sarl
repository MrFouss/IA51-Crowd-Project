/** 
 * MIT License
 * 
 * Copyright (c) 2017 Fouss
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fr.utbm.info.ia51.crowdproject.environment

import fr.utbm.info.ia51.crowdproject.util.math.Point2f
import fr.utbm.info.ia51.crowdproject.util.math.Shape2f

/**
 * Abstract implementation of an environment object
 */
abstract class EnvironmentObject {
	
	val position : Point2f
	val shape : Shape2f<?>
	
	/**
	 * @param x the x coordinate
	 * @param y the y coordinate
	 * @param shape the shape of the object
	 */
	new(x : float, y : float, shape : Shape2f<?>) {
		this.position = new Point2f(x, y)
		this.shape = shape.clone
	}
	/** 
	 * @param position the spatial position of the object
	 * @param shape the shape of the object
	 */
	new(position : Point2f, shape : Shape2f<?>) {
		this.position = position.clone
		this.shape = shape.clone
	}
}
