/** 
 * MIT License
 * 
 * Copyright (c) 2017 Fouss
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package fr.utbm.info.ia51.crowdproject.motion

import java.util.UUID
import org.dyn4j.geometry.Vector2

/** 
 * 
 */
class SteeringWanderAlgorithm implements WanderAlgorithm {

	override run(emitter : UUID, currentPosition : Vector2, orientation : double) : MotionQuery {
				/* Calculate the circle center
			 */
		var center = Vector2.create(WANDER_CIRCLE_DISTANCE, orientation)
		/* Calculate the displacement and its angle
		 */
		var displacement = Vector2.create(WANDER_CIRCLE_RADIUS, orientation)
		var wanderingAngle = Math.random - Math.random
		displacement.rotate(wanderingAngle)
		/* Calculate the wandering force and change the speed
		 */
		var wanderingForce = center.add(displacement)
		wanderingForce.magnitude = MAX_SPEED

		return new MotionQuery(emitter, MotionBehavior::STEERING) => [
			linear = wanderingForce
		]
	}
}
